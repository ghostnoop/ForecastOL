# Generated by Django 4.1.5 on 2023-01-22 13:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_fixtures'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('photo', models.URLField()),
            ],
            options={
                'db_table': 'vk_attachment',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(default='')),
                ('likes_count', models.IntegerField(default=None, null=True)),
                ('date', models.DateTimeField()),
                ('is_analyzed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'vk_comment',
            },
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'vk_follower',
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'vk_friend',
            },
        ),
        migrations.CreateModel(
            name='VKUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('screen_name', models.CharField(default=None, max_length=255, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('avatar', models.URLField(default=None, null=True)),
                ('followers_count', models.BigIntegerField(default=None, null=True)),
                ('friends_count', models.BigIntegerField(default=None, null=True)),
                ('contents', models.IntegerField(default=None, null=True)),
                ('birth_date', models.DateField(default=None, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('city', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.city')),
                ('country', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.country')),
                ('followers', models.ManyToManyField(related_name='followers_set', through='main.Follower', to='main.vkuser')),
                ('friends', models.ManyToManyField(related_name='friends_set', through='main.Friend', to='main.vkuser')),
                ('gender', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.gender')),
                ('profile_type', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='main.profiletype')),
            ],
            options={
                'db_table': 'vk_user',
            },
        ),
        migrations.CreateModel(
            name='Wall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('marked_as_ads', models.BooleanField(default=False)),
                ('text', models.TextField(default='')),
                ('likes_count', models.IntegerField(default=None, null=True)),
                ('comments_count', models.IntegerField(default=None, null=True)),
                ('reposts_count', models.IntegerField(default=None, null=True)),
                ('views_count', models.IntegerField(default=None, null=True)),
                ('date', models.DateTimeField()),
                ('is_analyzed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'vk_wall',
            },
        ),
        migrations.CreateModel(
            name='WallAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.attachment')),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='wall',
            name='attachments',
            field=models.ManyToManyField(through='main.WallAttachment', to='main.attachment'),
        ),
        migrations.AddField(
            model_name='wall',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.vkuser'),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.vkuser')),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.wall')),
            ],
            options={
                'db_table': 'vk_like',
            },
        ),
        migrations.AddField(
            model_name='friend',
            name='friend',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vk_friend_friend', to='main.vkuser'),
        ),
        migrations.AddField(
            model_name='friend',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vk_friend_user', to='main.vkuser'),
        ),
        migrations.AddField(
            model_name='follower',
            name='follower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vk_follower_follower', to='main.vkuser'),
        ),
        migrations.AddField(
            model_name='follower',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vk_follower_user', to='main.vkuser'),
        ),
        migrations.CreateModel(
            name='CommentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.attachment')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='attachments',
            field=models.ManyToManyField(through='main.CommentAttachment', to='main.attachment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.vkuser'),
        ),
        migrations.AddField(
            model_name='comment',
            name='wall',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.wall'),
        ),
        migrations.AlterUniqueTogether(
            name='friend',
            unique_together={('user_id', 'friend_id')},
        ),
        migrations.AlterUniqueTogether(
            name='follower',
            unique_together={('user_id', 'follower_id')},
        ),
        migrations.CreateModel(
            name='AnalyzedWall',
            fields=[
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('wall', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='main.wall')),
                ('is_contain_profanity', models.BooleanField(default=None, null=True)),
                ('emoji', models.JSONField(default=None, null=True)),
                ('emotion_type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.emotion')),
            ],
            options={
                'db_table': 'vk_analyzed_wall',
            },
        ),
        migrations.CreateModel(
            name='AnalyzedUser',
            fields=[
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='main.vkuser')),
                ('age_min', models.IntegerField(default=None, null=True)),
                ('age_max', models.IntegerField(default=None, null=True)),
                ('engagement_rate', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('gender', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.gender')),
            ],
            options={
                'db_table': 'vk_analyzed_user',
            },
        ),
        migrations.CreateModel(
            name='AnalyzedComment',
            fields=[
                ('update_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='main.comment')),
                ('is_contain_profanity', models.BooleanField(default=None, null=True)),
                ('emoji', models.JSONField(default=None, null=True)),
                ('emotion_type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.emotion')),
            ],
            options={
                'db_table': 'vk_analyzed_comment',
            },
        ),
    ]
